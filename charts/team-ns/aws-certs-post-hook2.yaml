{{- $ns := .Release.Namespace }}
{{- $v := .Values }}
{{- if and (eq $v.provider "aws") ($v.hasCloudLB) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "aws-certs-post-hook-2"
  labels: {{- include "chart-labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
      - name: certs-job
        image: "otomi/tools:{{ $v.toolsVersion }}"
        command:
          - sh
          - -c
        args:
          - |
            sleep 2 # needed otherwise we get connection refused on the k8s api
            certArns=$(kubectl get cm cert-arns -o json | jq -r '.data.certArns')
            # patch the aws ingress
            kubectl get ing {{ $ns }} -o json | jq '.metadata.annotations["alb.ingress.kubernetes.io/certificate-arn"] = "$certArns"' | kubectl apply -f -
{{- end }}