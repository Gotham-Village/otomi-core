{{- $ns := .Release.Namespace }}
{{- $v := .Values }}
{{- $appsDomain := printf "apps.%s" $v.domain }}
{{- if or (eq $v.teamId "admin") ($v.cluster.isMultitenant) }}
{{- $authSvc := (eq $v.teamId "admin" | ternary "oauth2-proxy" (printf "oauth2-proxy-team-%s" $v.teamId)) }}
# split list of services into separate ingress types:
# - auth: public vs private
# - forward path: forwarded (only exists to massage some core 'apps.*')
# - custom domain (not 'apps.*'): custom
{{- $public := list }}
{{- $publicCustom := list }}
{{- $private := list }}
{{- $privateForward := list }}
{{- $privateCustom := list }}
{{- range $s := $v.services }}
  {{- if not $s.isAuthProxy }}
    {{- if not (or $s.internal $s.host) }}
      {{- if $s.isPublic }}
        {{- if or $s.domain $s.ownHost }}
          {{- $publicCustom = (append $publicCustom $s) }}
        {{- else }}
          {{- $public = (append $public $s) }}
        {{- end }}
      {{- else }}
        {{- if or $s.domain $s.ownHost }}
          {{- $privateCustom = (append $privateCustom $s) }}
        {{- else }}
          {{- if $s.forwardPath -}}
            {{- $privateForward = (append $privateForward $s) }}
          {{- else }}
            {{- $private = (append $private $s) }}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- else }}
      {{- $private = (append $private $s) }}
    {{- end }}
  {{- end }}
{{- end }}

# apps.* that need their path rewritten to /
{{ include "ingress" (dict "dot" . "name" "private" "teamId" $v.teamId "domain" $v.domain "cluster" $v.cluster "isApps" true "hasForward" false "hasAuth" true "services" $private) }}
---

# apps.* that need their path forwarded instead of rewritten to /
{{ include "ingress" (dict "dot" . "name" "private-forward" "teamId" $v.teamId "domain" $v.domain "cluster" $v.cluster "isApps" true "hasForward" true "hasAuth" true "services" $privateForward) }}
---

# apps with custom domains
{{- if gt (len $privateCustom) 0 }}
{{ include "ingress" (dict "dot" . "name" "private-custom" "teamId" $v.teamId "domain" $v.domain "cluster" $v.cluster "isApps" false "hasForward" false "hasAuth" true "services" $privateCustom) }}
---
{{- end }}

# public services
{{- if gt (len $public) 0 }}
{{ include "ingress" (dict "dot" . "name" "public" "teamId" $v.teamId "domain" $v.domain "cluster" $v.cluster "isApps" false "hasForward" false "hasAuth" false "services" $public) }}
---
{{- end }}

# public services with custom domains
{{- if gt (len $publicCustom) 0 }}
{{ include "ingress" (dict "dot" . "name" "public-custom" "teamId" $v.teamId "domain" $v.domain "cluster" $v.cluster "isApps" false "hasForward" false "hasAuth" false "services" $publicCustom) }}
---
{{- end }}

{{- if gt (len $v.proxies) 0 }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    {{- include "ingress-annotations" $v | nindent 4 }}
    nginx.ingress.kubernetes.io/ssl-redirect: {{ if $v.cluster.hasCloudLB }}"false"{{ else }}"true"{{ end }}
    nginx.ingress.kubernetes.io/upstream-vhost: $1.{{ $v.domain }}
    nginx.ingress.kubernetes.io/rewrite-target: $2
  labels: {{- include "chart-labels" . | nindent 4 }}
  name: nginx-ingress-team-{{ $v.teamId }}-proxy
  namespace: istio-system
spec:
  rules:
  {{ range $p := $v.proxies }}
  - host: proxy.{{ $v.domain }}
    http:
      paths:
      - backend:
          serviceName: istio-ingressgateway
          servicePort: 80
        path: /({{ $p.name }})({{ $p.path }})
  {{- end }}
  {{- if not $v.cluster.hasCloudLB }}
  tls:
    - hosts:
        - {{ printf "proxy.%s" $v.domain }}
      secretName: proxy-{{ $v.domain | replace "." "-" }}
  {{- end }}
{{- end }}
{{- end }}
