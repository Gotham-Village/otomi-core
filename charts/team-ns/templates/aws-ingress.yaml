{{- $v := .Values }}
{{- if and (eq $v.provider "aws") ($v.hasCloudLB) (or (eq $v.name "admin") ($v.isMultitenant)) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels: {{- include "chart-labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{{ if not $v.ingress.forceSsl }}{"HTTP": 80}, {{ end }}{"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/tags: "team=team-{{ $v.name }} {{ $v.ingress.tags }}"
    alb.ingress.kubernetes.io/certificate-arn: {{ include "helm-toolkit.utils.joinListWithComma" $v.ingress.certArns  | quote }}
    alb.ingress.kubernetes.io/inbound-cidrs: {{ include "helm-toolkit.utils.joinListWithComma" $v.ingress.allowedCidrs  | quote }}
    alb.ingress.kubernetes.io/success-codes: '200,302,404'
    {{- if $v.ingress.disableHttp2 }}
    alb.ingress.kubernetes.io/load-balancer-attributes: "routing.http2.enabled=false"
    {{- end }}
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
  name: team-{{ $v.name }}
  namespace: ingress
spec:
  rules:
    {{- range $s := $v.services }}
    {{- if (not $s.private) -}}
    {{- $domain := (index $s "domain" | default printf "%s.%s" $s.name $v.domain) }}
    - host: {{ $domain }}
      http:
        paths:
          {{- if $v.ingress.forceSsl }}
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          {{- end }}
          - path: {{ $s.path | default "/*" }}
            backend:
              serviceName: nginx-ingress-controller
              servicePort: 80
    {{- end }}
    {{- end }}
{{- end }}