{{- $v := .Values }}
{{- if and (eq $v.cluster.provider "azure") ($v.cluster.hasCloudLB) (or (eq $v.teamId "admin") ($v.cluster.isMultitenant)) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: appgw-team-{{ $v.teamId }}
  namespace: ingress
  labels: {{- include "chart-labels" . | nindent 4 }}
  annotations:
    provider: azure
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
spec:
  rules:
    {{- range $s := $v.services }}
    {{- if and (not $s.internal) (not $s.host) (hasKey $s "domain") }}
    {{- $domain := (index $s "domain" | default (printf "%s.%s" $s.name $v.domain)) }}
    - host: {{ $s.domain }}
      http:
        paths:
          - backend:
              serviceName: nginx-ingress-controller
              servicePort: 80
    {{- end }}
    {{- end }}
    {{- range $app := list "auth" "apps" "proxy" }}
    - host: {{ $app }}.{{ $v.domain }}
      http:
        paths:
          - backend:
              serviceName: nginx-ingress-controller
              servicePort: 80
    {{- end }}
    {{- if (eq $v.teamId "admin") }}
    - host: drone.{{ $v.domain }}
      http:
        paths:
          - backend:
              serviceName: nginx-ingress-controller
              servicePort: 80
    - host: prometheus-istio.{{ $v.domain }}
      http:
        paths:
          - backend:
              serviceName: nginx-ingress-controller
              servicePort: 80
    {{- end }}
  tls: {{- include "ingress-tls" $v | nindent 4 }}
{{- end }}
