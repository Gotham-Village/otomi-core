{{- $v := .Values }}
{{- if and ($v.cluster.useCloudCA) (or (eq $v.name "admin") ($v.cluster.isMultitenant)) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: certs-post-job-2-team-{{ $v.name }}
  labels: {{- include "chart-labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    # "helm.sh/hook": post-install
    # "helm.sh/hook-weight": "-4"
    # "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: certs-post-job-2-team-{{ $v.name }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
      - name: certs-job
        image: "otomi/tools:{{ $v.toolsVersion }}"
        command:
          - sh
          - -c
        args:
          - |
            sleep 2 # needed otherwise we get connection refused on the k8s api
{{- if eq $v.cluster.provider "aws" }}
            oldCertArns="{{ include "helm-toolkit.utils.joinListWithComma" $v.ingress.certArns }}"
            certArns=$(kubectl get cm cert-arns-team-{{ $v.name }} -o json | jq -r '.data.certArns')
            certArns="$oldCertArns$([ \"$oldCertArns\" != \"\" ] && echo ',')$certArns"
            # patch the aws ingress
            kubectl -n ingress get ing team-{{ $v.name }} -o json | jq ".metadata.annotations[\"alb.ingress.kubernetes.io/certificate-arn\"] = \"$certArns\"" | kubectl -n ingress apply -f -
{{- else if eq $v.cluster.provider "google" }}
            # TODO: request domain wildcard cert and add to secret cert-team-{{ $v.name }}
{{- else if eq $v.cluster.provider "azure" }}
            # TODO: request domain wildcard cert and add to secret cert-team-{{ $v.name }}
{{- end }}
{{- end }}
