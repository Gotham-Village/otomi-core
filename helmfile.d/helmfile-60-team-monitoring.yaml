bases:
  - snippets/defaults.yaml
---
{{- $v := .Values }}
{{- $cluster := index $v.clusters $v.provider }}
{{- $adminDomain := printf "k8s-%s.%s" $v.stage $cluster.host }}
{{- $teamDomain := printf "in-%s.%s" $v.stage $cluster.host }}
{{- $po := index $v "prometheus-operator" }}
{{- $t := readFile "../values/teams.yaml" | fromYaml }}
# We can create subdomains only transparently on clouds other than azure for now.
# REASON: we expect only one AppGW to be prepared. We could enable one per team but that costs $.)
# So to simplify things we make all services on azure use the same domain suffix
# so we set the domConnector to "-"
{{- $domConnector := (eq $v.provider "azure" | ternary "-" ".") }}
releases:
  {{- range $team := $t.teams }}
  {{- $domain := printf "%s%s%s" $team.name $domConnector (eq $v.provider "azure" | ternary $adminDomain $teamDomain) }}
  {{/*- $services := (hasKey $team "services" | ternary (concat $t.services $team.services) $t.services) */}}
  {{- $services := $t.services }}
  {{- $promHost := printf "prometheus%s%s" $domConnector $domain }}
  {{- $alertsHost := printf "alertmanager%s%s" $domConnector $domain }}
  {{- $grafanaHost := printf "grafana%s%s" $domConnector $domain }}
  - name: prometheus-team-{{ $team.name }}
    installed: true
    namespace: team-{{ $team.name }}
    chart: ../charts/prometheus-operator
    labels:
      tag: teams
    values:
      - ../values/prometheus-operator/prometheus-operator.gotmpl
      - ../values/prometheus-operator/prometheus-operator-team.gotmpl
      - nameOverride: {{ $team.name }}-po
        fullnameOverride: {{ $team.name }}-po
        alertmanager:
          alertmanagerSpec:
            externalUrl: https://{{ $alertsHost }}
          config:
            global:
              slack_api_url: {{ $team | get "slackUrl" $po.alertmanager.slackUrl }}
          receivers:
            - name: "null"
            - name: default
              slack_configs:
                - channel: "#mon-{{ $team.name }}"
                  {{- readFile "../values/prometheus-operator/slack-configs.yaml" | nindent 18 }}
            - name: critical
              slack_configs:
                - channel: "#mon-{{ $team.name }}-crit"
                  {{- readFile "../values/prometheus-operator/slack-configs.yaml" | nindent 18 }}
        prometheus:
          prometheusSpec:
            externalUrl: https://{{ $promHost }}
            ruleNamespaceSelector:
              matchLabels:
                name: team-{{ $team.name }}
            podMonitorNamespaceSelector:
              matchLabels:
                name: team-{{ $team.name }}
            serviceMonitorNamespaceSelector:
              matchLabels:
                name: team-{{ $team.name }}
        grafana:
          nameOverride: {{ $team.name }}-po-grafana
          fullnameOverride: {{ $team.name }}-po-grafana
          grafana.ini:
            server:
              root_url: https://{{ $grafanaHost }}
          additionalDataSources:
            # - name: Graphite
            #   editable: false
            #   type: graphite
            #   access: proxy
            #   url: http://graphite:80
            - name: Loki
              editable: false
              type: loki
              access: proxy
              url: http://loki.monitoring:11811
              basicAuth: true
              basicAuthUser: {{ $team.name }}
              basicAuthPassword: {{ $team.password }}
  - name: grafana-dashboards-{{ $team.name }}
    installed: true
    namespace: team-{{ $team.name }}
    chart: ../charts/grafana-dashboards
    labels:
      tag: teams
    values:
      - ../values/grafana-dashboards/grafana-dashboards.gotmpl
      - ../values/default.gotmpl
      - dashboards:
          default:
            kubernetes: null

  - name: index-{{ $team.name }}
    installed: true
    namespace: team-{{ $team.name }}
    chart: ../charts/index
    labels:
      tag: teams
      pkg: index
    values:
      - ../values/index/index.gotmpl
      - ../values/default.gotmpl
      - fullnameOverride: {{ $team.name }}-index
        # prefix: {{ printf "%s.in" $team.name }}
        prefix: {{ printf "%s%sin" $team.name $domConnector }}
        services: 
          {{- range $s := $services }}
          {{- if and (not ($s | getOrNil "isAuthProxy")) (not ($s | getOrNil "private")) }}
          - {{ $s | toYaml | nindent 12 }}
          {{- end }}
          {{- end }}

        group: {{ $team.name }}
        domConnector: {{ $domConnector }}
  - name: oauth2-proxy-team-{{ $team.name }}
    installed: true
    namespace: istio-system
    chart: ../charts/oauth2-proxy
    labels:
      tag: teams
      pkg: oauth2-proxy
    values:
      - ../values/oauth2-proxy/oauth2-proxy.gotmpl
      - ../values/default.gotmpl
      - fullnameOverride: oauth2-proxy-team-{{ $team.name }}
        config:
          clientID: {{ $team.oidc.clientID }}
          clientSecret: {{ $team.oidc.clientSecret }}
        extraArgs:
          whitelist-domain: {{ $domain }}
          redirect-url: https://auth.{{ $domain }}/oauth2/callback
          cookie-domain: {{ $domain }}

  {{- end }}
