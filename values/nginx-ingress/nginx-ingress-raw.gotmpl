{{- $v := .Environment.Values }}
{{- $cm := index $v "cert-manager" }}
templates:
  - |
    apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      annotations:
        {{- readFile "../_snippets/auth-annotations.yaml" | replace "#DOMAIN#" $v.domain | nindent 8 }}
        {{- readFile "../_snippets/ingress-annotations.yaml" | replace "#DOMAIN#" $v.domain | nindent 8 }}
        ingress.kubernetes.io/ssl-redirect: {{ if $v.hasCloudLB }}"false"{{ else }}"true"{{ end }}
      labels:
        app: nginx-ingress
        release: gateway
      name: nginx-ingress
      namespace: istio-system
    spec:
      rules: 
      {{- range $s := $v.services }}
      {{- if and (ne $s.name "auth") (not ($s | getOrNil "private")) (not ($s | getOrNil "virtual")) }}
      - host: '{{ $s.name }}.{{ $v.domain }}'
        http:
          paths:
          - path: /oauth2/userinfo
            backend:
              serviceName: oauth2-proxy
              servicePort: 80
          - backend:
              serviceName: istio-ingressgateway
              servicePort: 80
      {{- end }}
      {{- end }}
      {{- if not $v.hasCloudLB }}
      tls: 
        - secretName: letsencrypt-{{ $cm.stage }}-k8s
          hosts:
            - '*.{{ $v.domain }}'
      {{- end }}
  - |
    apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      annotations:
        {{- readFile "../_snippets/ingress-annotations.yaml" | replace "#DOMAIN#" $v.domain | nindent 8 }}
        ingress.kubernetes.io/ssl-redirect: {{ if $v.hasCloudLB }}"false"{{ else }}"true"{{ end }}
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization
        nginx.ingress.kubernetes.io/configuration-snippet: |
          auth_request_set $_oauth2_proxy_upstream_1 $upstream_cookie__oauth2_proxy_1;

          access_by_lua_block {
            if ngx.var._oauth2_proxy_upstream_1 ~= "" then
              ngx.header["Set-Cookie"] = "_oauth2_proxy_1=" .. ngx.var._oauth2_proxy_upstream_1 .. ngx.var.auth_cookie:match("(; .*)")
            end
          }
        nginx.ingress.kubernetes.io/configuration-snippet: |
          rewrite ^/oauth2/redirect/(.*) https://$1 redirect;
        nginx.ingress.kubernetes.io/configuration-snippet: |
          proxy_set_header Host auth.{{ $v.domain }};
      labels:
        app: auth
        release: gateway
      name: auth
      namespace: istio-system
    spec:
      rules:
      - host: 'auth.{{ $v.domain }}'
        path: /oauth2
        http:
          paths:
          - backend:
              serviceName: oauth2-proxy
              servicePort: 80
      {{- if not $v.hasCloudLB }}
      tls: 
        - secretName: letsencrypt-{{ $cm.stage }}-k8s
          hosts:
            - '*.{{ $v.domain }}'
      {{- end }}
