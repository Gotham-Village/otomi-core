{{- $v := .Environment.Values }}
{{- $dns := $v | get "external-dns" dict }}
{{- $google := $v | get "google" dict }}
{{- $aws := $v | get "aws" dict }}
{{- $azure := $v | get "azure" dict }}
image:
  tag: 0.5.15-debian-9-r1
sources:
- service
- ingress

# - istio-gateway
# - crd

## - aws, azure, cloudflare, coredns, designate, digitalocoean, google, infoblox, rfc2136
##
provider: {{ $v.provider }}
{{- if eq $v.provider "google" }}
google:
  project: {{ $google.projectId }}
  serviceAccountKey: |
    {{- $google.cloudDnsKey | nindent 4 }}
{{- else if eq $v.provider "aws" }}
aws:
  {{- $dns.aws | toYaml | nindent 2 }}
{{- else if eq $v.provider "azure" }}
azure:
  {{- $dns.azure | toYaml | nindent 2 }}
  tenantId: {{ $azure.tenantId }}
  subscriptionId: {{ $azure.subscriptionId }}
{{- end }}  
domainFilters: ["{{ $v.cloudDns.domain }}"]
zoneIdFilters: ["{{ $v.cloudDns.zone }}"]
annotationFilter: "{{ if and (eq $v.provider "azure") $v.hasCloudLB }}provider=azure{{ end }}"
dryRun: false
crd:
  create: false
  apiversion: ""
  kind: ""

rbac:
  create: true
  apiVersion: v1beta1
  pspEnabled: true

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]
podSecurityContext:
  fsGroup: 1001
  runAsUser: 1001

resources: {}
#  limits:
#    cpu: 50m
#    memory: 50Mi
#  requests:
#    memory: 50Mi
#    cpu: 10m

metrics:
  enabled: true
