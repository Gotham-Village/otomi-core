{{- $v := .Environment.Values }}
{{- $cluster := index $v.clusters $v.provider }}
{{- $domain := printf "admins.%s.%s" $v.stage $cluster.host }}
{{- $cm := index $v.charts "cert-manager" }}
resources:
  - apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: alb-admins
      namespace: ingress
      annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/listen-ports: '[{{ if not $v.ingress.forceSsl }}{"HTTP": 80}, {{ end }}{"HTTPS":443}]'
        alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
        alb.ingress.kubernetes.io/tags: "{{ $v.ingress.tags }}"
        alb.ingress.kubernetes.io/certificate-arn: {{ include "helm-toolkit.utils.joinListWithComma" $v.ingress.certArns  | quote }}
        alb.ingress.kubernetes.io/inbound-cidrs: {{ include "helm-toolkit.utils.joinListWithComma" $v.ingress.allowedCidrs  | quote }}
        alb.ingress.kubernetes.io/success-codes: '200,302,404'
        {{- if $v.ingress.disableHttp2 }}
        alb.ingress.kubernetes.io/load-balancer-attributes: "routing.http2.enabled=false"
        {{- end }}
        alb.ingress.kubernetes.io/healthcheck-path: /healthz
      name: {{ $ns }}
      namespace: ingress
    spec:
      rules:
        {{- range $s := $v.services }}
        {{- $domain := printf "%s.%s" $s.name $domain }}
        - host: {{ $v.domain }}
          http:
            paths:
              {{- if $v.ingress.forceSsl }}
              - path: /*
                backend:
                  serviceName: ssl-redirect
                  servicePort: use-annotation
              {{- end }}
              - path: {{ $s.path | default "/*" }}
                backend:
                  serviceName: nginx-ingress-controller
                  servicePort: 80
        {{- end }}
    spec:
      tls:
        - hosts:
            {{- range $s := $v.services }}
            {{- if and (not ($s | getOrNil "private")) (not ($s | getOrNil "virtual")) }}
            - {{ $s.name }}.{{ $domain }}
            {{- end }}
            {{- end }}
          secretName: letsencrypt-{{ $cm.stage }}-k8s
      rules:
        {{- range $s := $v.services }}
        {{- if and (not ($s | getOrNil "private")) (not ($s | getOrNil "virtual")) }}
        - host: {{ $s.name }}.{{ $domain }}
          http:
            paths:
              - backend:
                  serviceName: nginx-ingress-controller
                  servicePort: 80
        {{- end }}
        {{- end }}
