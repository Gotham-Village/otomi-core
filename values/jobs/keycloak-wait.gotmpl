{{- $v := .Environment.Values }}
{{- $teams := $v.teamConfig.teams }}
{{- $teamNames := list }}
{{- $teamsMapping := dict }}
{{- range $name, $team := $teams }}
{{- $teamNames = print "team-" $name | append $teamNames -}}
{{- if ($team | get "oidc.groupMapping" false) }}
  {{- $teamsMapping = set $teamsMapping (printf "team-%s" $name) $team.oidc.groupMapping -}}
{{- end -}}
{{- end -}}
{{- $c := $v.charts }}
{{- $cm := $c | get "cert-manager" -}}
{{- $k := $c | get "keycloak" dict }}
{{- $idp := $v.oidc.idp }}
{{- $skipVerify := eq ($cm | get "stage") "staging" }}
tasks:
  keycloak-wait:
    type: job
    description: Wait for keycloak service to come up
    enabled: true
    image:
      repository: curlimages/curl
      tag: latest
      pullPolicy: IfNotPresent
    script: |
      {{- if $skipVerify }}export NODE_EXTRA_CA_CERTS=/fakeroot.pem \{{ end }}
      printf "Waiting until kecloak is accessible."
      until $(curl --output /dev/null --silent --head --fail https://keycloak.{{ $v.cluster.domain }}); do 
        printf '.'
        sleep 5
      done
      printf "\nReady! Starting task."
