{{- $v := .Environment.Values }}
{{- $custId := ($v | getOrNil "customer.id" | default "otomi") }}
{{- $bucket := (printf "registry-%s" $custId) }}
templates:
  {{- if ($v | getOrNil "gitlab.enabled") }}
  - |
    apiVersion: v1
    kind: Secret
    metadata:
      name: registry-storage
    data:
      config: {{ readFile "./registry-storage-gcs.yaml" | replace "#BUCKET#" $bucket | b64enc }}
      gcs.json: {{- $v.gcsKey | b64enc }}
  {{- end }}
  {{- range $custId, $cust := $v.customers }}
  # one gateway per customer, to be referenced by virtualservices
  - |
    apiVersion: networking.istio.io/v1alpha3
    kind: Gateway
    metadata:
      name: cust-{{ $custId }}
      namespace: ingress
    spec:
      selector:
        istio: ingressgateway
      servers:
      - hosts:
        - '*.{{ $custId }}.{{ $v.customerDomain }}'
        {{- range $nsName, $ns := $cust.namespaces }}
        - '*.{{ $nsName }}.{{ $custId }}.{{ $v.customerDomain }}'
        {{- end }}
        port:
          name: https
          number: 443
          protocol: HTTPS
        tls:
          mode: SIMPLE
          privateKey: sds
          serverCertificate: sds
  {{- range $svc := $v.customerServices }}
  - |
    apiVersion: networking.istio.io/v1alpha3
    kind: VirtualService
    metadata:
      name: {{ $svc.name }}-{{ $custId }}-{{ $v.customerDomain }}'
      namespace: {{ $cust.servicesNamespace }}
    spec:
      gateways:
      - ingress/cust-{{ $custId }}
      hosts:
      - {{ $svc.name }}.{{ $custId }}.{{ $v.customerDomain }}
      http:
      - route:
        - destination:
            host: {{ $svc.svc }}.{{ $svc.namespace }}.svc.cluster.local
            port:
              number: {{ $svc | getOrNil "port" | default 80 }}
          weight: 100
  {{- end }}
  {{- end }}


