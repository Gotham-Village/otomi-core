{{- $v := .Environment.Values }}
{{- $i := $v.charts.istio }}
{{- $domain := printf "%s%s.%s" $v.cluster.teamPrefix "admin" $v.cluster.domain }}
resources:
  - apiVersion: install.istio.io/v1alpha1
    kind: IstioOperator
    metadata:
      namespace: istio-system
      name: istiocontrolplane
    spec:
      {{- if eq $v.cluster.provider "azure" }}
      gateways:
        components:
          ingressGateway:
            k8s:
              readinessProbe:
                failureThreshold: 20
      {{- end }}
      profile: default
      # autoInjection:
      #   enabled: false
      # cni:
      #   enabled: true # not working with SDS yet, see: https://github.com/istio/istio/issues/15701
      # security:
      #   components:
      #     certManager:
      #       enabled: true
      #     citadel:
      #       enabled: false
      addonComponents:
        grafana:
          enabled: true
        prometheus:
          enabled: true
        tracing:
          enabled: true
        kiali:
          enabled: true
        # gateways:
        #   istio-ingressgateway:
        #     sds:
        #       enabled: {{ $i | get "sds.enabled" "true" }}
        #     type: ClusterIP
      values:
        # global:
        #   mtls:
        #     auto: {{ $i.mtls.enabled }}
        #   controlPlaneSecurityEnabled: true
        #   # tag: 1.2.2
        #   # logging:
        #   #   level: "default:info"
        #   proxy:
        #     accessLogFile: /dev/stdout
        #     # autoInject: disabled
        #   # controlPlaneSecurityEnabled: false
        #   # disablePolicyChecks: false
        #   # enableTracing: false
        # kiali:
        #   contextPath: "/"
        #   dashboard:
        #     # auth:
        #     #   strategy: anonymous
        #     jaegerURL: https://tracing.{{ $domain }}
        #     grafanaURL: https://grafana-istio.{{ $domain }}
        sidecarInjectorWebhook:
          enabled: true
          enableNamespacesByDefault: true
        #   # If true, webhook or istioctl injector will rewrite PodSpec for liveness
        #   # health check to redirect request to sidecar. This makes liveness check work
        #   # even when mTLS is enabled.
        #   rewriteAppHTTPProbe: true
        gateways:
          istio-ingressgateway:
            sds:
              enabled: {{ $i | get "sds.enabled" "true" }}
            type: ClusterIP
  - apiVersion: v1
    kind: Secret
    data:
      passphrase: YmxhZGlibGE= # bladibla
      username: YWRtaW4=
    metadata:
      name: kiali
      namespace: istio-system
    type: Opaque
                