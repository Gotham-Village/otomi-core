apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    externaldns: 'true'
    ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-signin: https://auth.${FQDN}/oauth2/start?rd=/oauth2/redirect/$http_host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.istio-system.svc.cluster.local/oauth2/auth
    nginx.ingress.kubernetes.io/server-snippets: |
      location ~* /(ws(s)?|socket.io)/ {
          proxy_set_header Upgrade $http_upgrade;
          proxy_http_version 1.1;
          proxy_set_header X-Forwarded-Host $http_host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_set_header Host $host;
          proxy_set_header Connection "upgrade";
          proxy_cache_bypass $http_upgrade;
        }
  labels:
    app: team-ns
    app.kubernetes.io/instance: team-ns-dev
    app.kubernetes.io/name: team-ns
    app.kubernetes.io/part-of: otomi
    otomi.io/team: dev
  name: nginx-team-dev-platform-public-auth
  namespace: istio-system
spec:
  ingressClassName: platform
  rules:
    - host: tty.${FQDN}
      http:
        paths:
          - backend:
              service:
                name: istio-ingressgateway-public
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - tty.${FQDN}
      secretName: ${TLS_SECRET_NAME}
---

