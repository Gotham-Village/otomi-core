apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "otomi.fullname" . }}
  labels: {{- include "otomi.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "otomi.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- else }}
      imagePullSecrets: 
        - name: regcred
      {{- end }}
      serviceAccountName: {{ include "otomi.fullname" . }}
      securityContext:
        runAsUser: 999
        runAsGroup: 999
      initContainers:
        - name: bootstrap-values
          image: {{ .Values.coreImageRepository | default "otomi/core" }}:{{ .Values.coreImageTag | default .Values.otomi.version }}
          imagePullPolicy: {{ .Values.coreImagePullPolicy  | default "Always" }}
          command: ['/bin/bash', '-c']
          args: 
            - |
              {{ .Files.Get "scripts/bootstrap-values.sh" | nindent 14 }}
          env:
            - name: IN_DOCKER
              value: '1'
            - name: VERBOSE
              value: '1'
            - name: CI
              value: 'true'
            - name: ENV_DIR
              value: /env
            - name: OTOMI_VALUES_INPUT
              value: /secret/values.yaml
          envFrom:
            - secretRef:
                name: {{ include "otomi.fullname" . }}-sops-secrets
          volumeMounts:
            - name: otomi-values
              mountPath: /env
            - name: values-secret
              mountPath: /secret
        - name: map-values
          image: {{ .Values.tasksImageRepository | default "otomi/tasks" }}:{{ .Values.tasksImageTag | default "master"}}
          imagePullPolicy: {{ .Values.taskImagePullPolicy | default "Always" }}
          command: ['sh', '-c']
          args:
            - |
              {{ .Files.Get "scripts/map-values.sh" | nindent 14 }}
          env:
            - name: IN_DOCKER
              value: '1'
            - name: OTOMI_VALUES_INPUT
              value: /secret/values.yaml
            - name: OTOMI_ENV_DIR
              value: /env
            - name: OTOMI_SCHEMA_PATH
              value: /env/values-schema.yaml
          volumeMounts:
            - name: otomi-values
              mountPath: /env
            - name: values-secret
              mountPath: /secret
        - name: push-values
          image: {{ .Values.coreImageRepository | default "otomi/core" }}:{{ .Values.coreImageTag | default .Values.otomi.version }}
          imagePullPolicy: {{ .Values.coreImagePullPolicy  | default "Always"}}
          command: [/bin/bash, -c]
          args:
            - |
              {{ .Files.Get "scripts/push-values.sh" | nindent 14 }}
          env:
            - name: IN_DOCKER
              value: '1'
            - name: VERBOSE
              value: '1'
            - name: CI
              value: 'true'
            - name: ENV_DIR
              value: /env
          envFrom:
            - secretRef:
                name: {{ include "otomi.fullname" . }}-sops-secrets
          volumeMounts:
            - name: otomi-values
              mountPath: /env
      containers:
        - name: otomi-install
          image: {{ .Values.coreImageRepository | default "otomi/core" }}:{{ .Values.coreImageTag | default .Values.otomi.version }}
          imagePullPolicy: {{ .Values.coreImagePullPolicy  | default "Always"}}
{{ include "otomi.resources" . | indent 10 }}
          command: [/bin/bash, -c]
          args:
            - |
              {{ .Files.Get "scripts/deploy.sh" | nindent 14 }}
          env:
            - name: IN_DOCKER
              value: '1'
            - name: VERBOSE
              value: '1'
            - name: CI
              value: 'true'
            - name: ENV_DIR
              value: /home/app/stack/env
          envFrom:
            - secretRef:
                name: {{ include "otomi.fullname" . }}-sops-secrets
          volumeMounts:
            - name: otomi-values
              mountPath: /home/app/stack/env
      volumes:
        - name: values-secret
          secret:
            secretName: '{{ .Release.Name }}-values'
        - name: otomi-values
          emptyDir: {}
      restartPolicy: Never
