# Default values for otomi chart.

replicaCount: 1

coreImage:
  repository:
  pullPolicy: Always
  tag:

taskImage:
  repository:
  pullPolicy: Always
  tag:

imagePullSecrets:
- name: regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# otomi specific values based on otomi value-schema 

cluster:
  apiName: ''
  apiServer: ''
  domainSuffix: ''
  k8sVersion: '1.19'
  name: 'dev'
  provider: ''
  region: ''
kms:
  sops:
    # provider can be one of aws|azure|google|vault
    # provider: ''
    # aws:
    #   clientID: ''
    #   clientSecret: ''
    #   keys: ''
    # azure:
    #   tenantID: ''
    #   clientID: ''
    #   clientSecret: ''
    #   keys: ''
    # google:
    #   accountJson: ''
    #   project: ''
    #   keys: ''
    # vault:
    #   token: ''
oidc:
  clientID: ''
  clientSecret: ''
  adminGroupID: ''
  authUrl: ''
  issuer: ''
  teamAdminGroupID: ''
  tenantID: ''
  tokenUrl: ''
otomi:
  pullSecret: ''
  adminPassword: ''
  isMultitenant: true
  version: master
customer:
  name: ''
dns:
  provider:
    # provide one of the following below: aws|azure|google
    # aws:
    #   region: 'eu-central-1'
    # azure:
    #   aadClientId: ''
    #   aadClientSecret: ''
    #   tenantId: '' # optional
    #   subscriptionId: '' # optional
    # google:
    #   serviceAccountKey: ''
    #   project: ''
charts:
  cert-manager:
    email: ''
    # stage defaults to 'staging'
    # stage: production
  external-dns:
    domainFilters:
      - ''
    # zoneIdFilters: []
  gitea:
    postgresqlPassword: ''
  keycloak:
    # keycloak is enabled by default
    # enabled: false
    idp:
      alias: otomi # shown on keycloak login page as a button
      # credentials that will be used by the apps' clients to access keycloak in the cluster:
      clientID: ''
      clientSecret: ''
    postgresqlPassword: '' # for now this needs to be set to avoid generating a new one each time
  loki:
    adminPassword: '' # used for log splitting by team
  nginx-ingress:
    private:
      enabled: false # enable to start a LB on the private network
  kubeapps:
    postgresqlPassword: '' # for now this needs to be set to avoid generating a new one each time
  oauth2-proxy:
    config:
      cookieSecret: '' # for now this needs to be set to avoid generating a new one each time 3
